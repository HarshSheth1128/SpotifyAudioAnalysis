{"version":3,"sources":["images/collage.jpg","images/report.png","images/barGraph.png","images/scatter.png","pages/Home.tsx","context/auth.ts","components/PrivateRoute.jsx","pages/Login.tsx","icons/search-solid.svg","common/api.ts","pages/Search.tsx","constants/types.ts","components/Sidebar.tsx","components/CustomizedTick.tsx","pages/BarGraph.tsx","pages/ScatterGraph.tsx","pages/InfoPage.tsx","pages/Report.tsx","pages/Playlist.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","AuthContext","props","className","alt","src","BackgroundImage","Title","Text","style","marginTop","onClick","url","encodeURIComponent","process","REDIRECT_URI","window","location","autoplay","level","width","Report","BarGraph","Scatter","useAuth","useContext","PrivateRoute","children","rest","isAuth","to","Login","useState","setIsError","setIsAuth","useCookies","setCookie","code","setCode","history","useHistory","useEffect","params","URLSearchParams","append","axios","post","headers","then","res","localStorage","setItem","data","access_token","refresh_token","push","catch","index","search","includes","indexOf","substring","playlistId","cookies","a","Authorization","getItem","get","items","tracks","trackIds","map","trackObj","track","id","join","audio_features","audioFeature","reduce","acc","obj","audioAnalysis","getGraphDataFromRawData","useGetPlaylists","playlists","setPlaylists","name","truncate","length","danceability","energy","valence","tempo","loudness","round","useGetGraphDataFromRawData","setTracks","useGetTracksForPlaylist","setAudioAnalysis","audioFeatureObjects","useGetAudioFeaturesForTracks","graphData","setGraphData","isEmpty","interceptors","response","use","error","originalRequest","config","status","_retry","console","log","reload","Application","ContentTypes","GraphFeatures","MenuItems","onSubmit","evt","preventDefault","selectedPlaylistName","target","value","playlist","find","Group","compact","placeholder","options","htmlType","searchSolid","Sidebar","contentType","setContentType","sidebarOpen","setSidebarOpen","userObject","display_name","images","setUserObject","useGetUserObject","hasImage","UserOutlined","type","marginBottom","React","createElement","MenuFoldOutlined","MenuUnfoldOutlined","selectedKeys","inlineCollapsed","theme","mode","defaultSelectedKeys","toString","e","item","changedItem","Search","ScatterGraph","Info","handleMenuClick","key","Item","icon","SearchOutlined","PaperClipOutlined","BarChartOutlined","DotChartOutlined","InfoCircleOutlined","CustomizedAxisTick","RadioSortByOptions","SortOrder","x","y","payload","transform","dy","textAnchor","opacity","fill","match","activeFeatures","setActiveFeatures","none","sortBy","setSortBy","paginatedData","setPaginatedData","page","setPage","descending","sortOrder","setSortOrder","sortData","useCallback","sort","b","paginateData","slice","sortedData","barCategoryGap","layout","height","strokeDasharray","tick","interval","dataKey","fontSize","fontWeight","simple","onChange","current","pageSize","total","checked","toggleFeature","display","flexDirection","alignItems","disabled","ascending","feature","hexFills","featureDomains","playlistName","X","Y","Z","features","setFeatures","selectedPlaylists","setSelectedPlaylists","FeatureMenu","side","getGraphDataFromId","visible","PlusOutlined","startCase","margin","top","right","bottom","left","domain","range","cursor","decodeUriComponent","playlistGraphData","i","removePlaylist","overlay","DownOutlined","InfoPage","title","bordered","Paragraph","playlistCoverImage","setPlaylistCoverImage","useGetPlaylistCoverImage","description","owner","followers","useGetPlaylistById","setData","Object","keys","averages","values","useGetRadarChartDataFromId","getAverage","avg","dataObj","prettyMilliseconds","sum","curr","cy","outerRadius","stroke","angle","fillOpacity","marginRight","Playlist","None","pathName","useLocation","pathname","lastIndexOf","subTitle","getContent","App","isAuthDefault","JSON","parse","defaultVal","createContext","useCreateAuthContext","AuthContextDefault","CookiesProvider","Provider","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6eAAe,G,cAAA,IAA0B,qC,2BCA1B,MAA0B,mCCA1B,MAA0B,qCCA1B,MAA0B,oCCyD1BA,IClDXC,EDkDWD,EAhDf,SAAcE,GAYZ,OACE,sBAAKC,UAAU,gBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKC,IAAI,aAAaD,UAAU,aAAaE,IAAKC,MAEpD,sBAAKH,UAAU,mBAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAWI,MAAZ,gCACA,cAAC,IAAWC,KAAZ,+CACA,cAAC,IAAD,CAAQC,MAAO,CAACC,UAAW,IAAKC,QApBxB,WAChB,IAAIC,EAAM,yCACVA,GAAO,sBACPA,GAAO,cAAgBC,mBAAmBC,oCAC1CF,GAAO,0BAA4BC,mBAAmB,QACtDD,GAAO,iBAAmBC,mBAAmBC,2VAAYC,cACzDH,GAAO,mBAAqBC,mBAAmBC,+CAC/CE,OAAOC,SAAWL,GAaV,8BAGJ,qBAAKT,UAAU,iBAAf,SACE,eAAC,IAAD,CAAUe,UAAQ,EAAlB,UACE,sBAAKf,UAAU,qBAAf,UACE,cAAC,IAAWI,MAAZ,CAAkBY,MAAO,EAAzB,wCACA,qBAAKC,MAAO,QAAShB,IAAI,SAASD,UAAU,cAAcE,IAAKgB,OAEjE,sBAAKlB,UAAU,qBAAf,UACA,cAAC,IAAWI,MAAZ,CAAkBY,MAAO,EAAzB,4DACE,qBAAKC,MAAO,QAAShB,IAAI,SAASD,UAAU,cAAcE,IAAKiB,OAEjE,sBAAKnB,UAAU,qBAAf,UACA,cAAC,IAAWI,MAAZ,CAAkBY,MAAO,EAAzB,mDACE,qBAAKC,MAAO,QAAShB,IAAI,SAASD,UAAU,cAAcE,IAAKkB,mB,iBC1BtE,SAASC,IACd,OAAOC,qBAAWxB,GClBpB,IAaeyB,EAbM,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,SAAaC,EAAU,4BACrCC,EAAUL,IAAVK,OACP,OACA,cAAC,IAAD,2BAAWD,GAAX,cAEc,IAAXC,EAAD,eACMF,GACJ,cAAC,IAAD,CAAUG,GAAG,U,0BCuCJC,MA3Cf,WAAkB,IAAD,EACOC,oBAAS,GAAvBC,EADO,sBAEaT,IAArBK,EAFQ,EAERA,OAAQK,EAFA,EAEAA,UAFA,EAGMC,YAAW,CAAC,gBAAiB,YAA1CC,EAHO,sBAISJ,mBAAS,IAJlB,mBAIRK,EAJQ,KAIFC,EAJE,KAKTC,EAAUC,cAEhBC,qBAAU,WACR,GAAa,KAATJ,EAAa,CACf,IAAMK,EAAS,IAAIC,gBACnBD,EAAOE,OAAO,YAAa9B,oCAC3B4B,EAAOE,OAAO,aAAc,sBAC5BF,EAAOE,OAAO,OAAQP,GACtBK,EAAOE,OAAO,eAAgB9B,2VAAYC,cAC1C2B,EAAOE,OAAO,gBAAiB9B,iDAE/B+B,IAAMC,KAAK,yCAA0CJ,EAAQ,CAAEK,QAAS,CACtE,eAAgB,uCACdC,MAAK,SAACC,GACRC,aAAaC,QAAQ,gBAAiBF,EAAIG,KAAKC,cAC/CH,aAAaC,QAAQ,UAAWF,EAAIG,KAAKE,eACzCpB,GAAU,GACVK,EAAQgB,KAAK,kBACZC,OAAM,WACPjB,EAAQgB,KAAK,WAGhB,CAAClB,EAAMR,EAAQO,EAAWF,EAAWK,IAExC,IACIkB,EADEC,EAAS1C,OAAOC,SAASyC,OAW/B,OARIA,EAAOC,SAAS,UAClB1B,GAAW,GAGA,KAATI,IAAsD,KAAtCoB,EAAQC,EAAOE,QAAQ,WACzCtB,EAAQoB,EAAOG,UAAUJ,EAAQ,IAG3B,yB,SC9CK,G,OAAA,IAA0B,0C,yGC+BlC,WAAkCK,EAAoBC,GAAtD,qBAAAC,EAAA,6DACCC,EAAgBf,aAAagB,QAAQ,iBADtC,SAEgBrB,IAAMsB,IAAN,+CAAkDL,EAAlD,WAAuE,CAC1Ff,QAAS,CACP,cAAgB,UAAhB,OAA2BkB,MAE5BjB,MAAK,SAACC,GACP,OAAOA,EAAIG,KAAKgB,SAPb,cAECC,EAFD,OAUCC,EAAWD,EAAOE,KAAI,SAACC,GAAD,OAAmCA,EAASC,MAAMC,MAAIC,KAAK,KAVlF,SAYuB9B,IAAMsB,IAAN,wDAA2DG,GAAY,CACjGvB,QAAS,CACP,cAAgB,UAAhB,OAA2BkB,MAE5BjB,MAAK,SAACC,GAKP,OAJsBA,EAAIG,KAAKwB,eAE1BL,KAAI,SAACM,GAA+B,OAAO,eAAEA,EAAaH,GAAKG,MAC/DC,QAAO,SAACC,EAAUC,GAAc,OAAO,2BAAID,GAAQC,KAAO,OApB5D,cAYCC,EAZD,yBAwBEC,EAAwBb,EAAQY,IAxBlC,4C,sBA4GA,SAASE,IAAmB,IAAD,EACEnD,mBAAqB,IADvB,mBACzBoD,EADyB,KACdC,EADc,KAE1BpB,EAAgBf,aAAagB,QAAQ,iBAW3C,OAVAzB,qBAAU,WACRI,IAAMsB,IAAI,0CAA2C,CACnDpB,QAAS,CACP,cAAgB,UAAhB,OAA2BkB,MAE5BjB,MAAK,SAACC,GACPoC,EAAapC,EAAIG,KAAKgB,YAEvB,CAACH,IAEG,CAACmB,EAAWC,GA6Dd,SAASH,EAAwBb,EAAuBY,GAC7D,OAAOZ,EACJE,KAAI,SAACC,GACJ,MAAO,CACLc,KAAMC,mBAASf,EAASC,MAAMa,KAAM,CAACE,OAAQ,KAC7CC,aAAcR,EAAcT,EAASC,MAAMC,IAAIe,aAC/CC,OAAQT,EAAcT,EAASC,MAAMC,IAAIgB,OACzCC,QAASV,EAAcT,EAASC,MAAMC,IAAIiB,QAC1CC,MAAOX,EAAcT,EAASC,MAAMC,IAAIkB,MACxCC,SAAUC,iBAAOb,EAAcT,EAASC,MAAMC,IAAImB,SAAW,IAAM,GAAI,OAKxE,SAASE,EAA2BjC,GACzC,IAAMO,EArDD,SAAiCP,GAAqB,IAAD,EAC9B9B,mBAAS,IADqB,mBACnDqC,EADmD,KAC3C2B,EAD2C,KAEpD/B,EAAgBf,aAAagB,QAAQ,iBAW3C,OAVAzB,qBAAU,WACRI,IAAMsB,IAAN,+CAAkDL,EAAlD,WAAuE,CACrEf,QAAS,CACP,cAAgB,UAAhB,OAA2BkB,MAE5BjB,MAAK,SAACC,GACP+C,EAAU/C,EAAIG,KAAKgB,YAEpB,CAACH,EAAeH,IAEZO,EAwCQ4B,CAAwBnC,GACjCmB,EAtCD,SAAsCZ,GAAgC,IAAD,EAChCrC,mBAAwB,IADQ,mBACnEiD,EADmE,KACpDiB,EADoD,KAEpEjC,EAAgBf,aAAagB,QAAQ,iBAAyBI,EAAWD,EAAOE,KAAI,SAACC,GAAD,OAAmCA,EAASC,MAAMC,MAAIC,KAAK,KAiBrJ,OAfAlC,qBAAU,WACc,IAAlB4B,EAAOmB,QACX3C,IAAMsB,IAAN,wDAA2DG,GAAY,CACrEvB,QAAS,CACP,cAAgB,UAAhB,OAA2BkB,MAE5BjB,MAAK,SAACC,GACP,IACMkD,EADgBlD,EAAIG,KAAKwB,eAE1BL,KAAI,SAACM,GAA+B,OAAO,eAAEA,EAAaH,GAAKG,MAC/DC,QAAO,SAACC,EAAUC,GAAc,OAAO,2BAAID,GAAQC,KAAO,IAC/DkB,EAAiBC,QAElB,CAAClC,EAAeK,EAAUD,IAEtBY,EAmBemB,CAA6B/B,GAFU,EAG7BrC,mBAAsB,IAHO,mBAGxDqE,EAHwD,KAG7CC,EAH6C,KAa9D,OAPC7D,qBAAU,WACT,IAAI8D,kBAAQlC,KAAWkC,kBAAQtB,GAA/B,CACA,IAAIoB,EAAyBnB,EAAwBb,EAAQY,GAE7DqB,EAAaD,MACZ,CAAChC,EAAQY,IAEL,CAACoB,EAAWC,GA3OpBzD,IAAM2D,aAAaC,SAASC,KAC1B,SAAAzD,GAAG,OAAIA,KACP,SAAC0D,GACC,IAAMC,EAAkBD,EAAME,OAC9B,GAA8B,MAA1BF,EAAMF,SAASK,OAAgB,CACjC5D,aAAaC,QAAQ,SAAU,SAC/ByD,EAAgBG,QAAS,EACzBC,QAAQC,IAAI/D,aAAagB,QAAQ,YACjC,IAAMxB,EAAS,IAAIC,gBACnBD,EAAOE,OAAO,aAAc,iBAC5BF,EAAOE,OAAO,gBAAiBM,aAAagB,QAAQ,YAAc,IAClExB,EAAOE,OAAO,YAAa,oCAC3BC,IAAMC,KAAK,yCAA0CJ,EAAQ,CAAEK,QAAS,CACtE,eAAgB,uCACdC,MAAK,SAACC,GACRC,aAAaC,QAAQ,gBAAiBF,EAAIG,KAAKC,cAC/CH,aAAaC,QAAQ,UAAWF,EAAIG,KAAKE,kBACxCN,MAAK,WACNE,aAAaC,QAAQ,SAAU,QAC/BnC,OAAOC,SAASiG,gBCyBTC,ICjDHC,EAoBAC,ECFPC,EF+BUH,EAxCf,SAAqBjH,GAAa,IAAD,EACXiF,IAAbC,EADwB,oBAEzB7C,EAAUC,cAchB,OAEE,qBAAKrC,UAAU,aAAf,SACE,sBAAKA,UAAU,gBAAf,UAEE,cAAC,IAAWI,MAAZ,mDACA,qBAAKJ,UAAU,YAAf,SACE,uBAAMA,UAAU,aAAaoH,SAdpB,SAACC,GAChBA,EAAIC,iBACJ,IAAMC,EAAuBF,EAAIG,OAAO,GAAGC,MACrCC,EAAWC,eAAK1C,GAAW,SAACyC,GAAuC,OAAOA,EAASvC,OAASoC,KAClG,OAAOnF,EAAQgB,KAAR,4CAAkDsE,EAASvC,KAA3D,uBAA8EuC,EAASnD,MAUxF,UAEI,cAAC,IAAMqD,MAAP,CAAa5H,UAAU,cAAc6H,SAAO,EAA5C,SACE,cAAC,IAAD,CACEC,YAxBQ,cAyBRC,QAtBP9C,EAAUb,KAAI,SAACtB,GAAkB,MAAO,CAAC,MAASA,EAAIqC,aAyBnD,cAAC,IAAD,CAAQ6C,SAAS,SAAjB,SAA0B,qBAAKhI,UAAU,aAAaC,IAAI,aAAaC,IAAK+H,iB,2GCxC9EhB,K,YAAAA,E,eAAAA,E,uBAAAA,E,YAAAA,E,gBAAAA,E,iBAAAA,M,cAoBAC,K,4BAAAA,E,gBAAAA,E,kBAAAA,E,cAAAA,E,qBAAAA,M,cCFPC,K,gBAAAA,E,oBAAAA,E,4BAAAA,E,gBAAAA,E,gBAAAA,E,aAAAA,M,KAmEUe,OA1Df,YAGM,IAHYC,EAGb,EAHaA,YAAaC,EAG1B,EAH0BA,eAG1B,EACmCvG,oBAAS,GAD5C,mBACIwG,EADJ,KACiBC,EADjB,KAEGC,EH2HD,WAA6B,IAAD,EACG1G,mBAGjC,CAAC2G,aAAc,QAASC,OAAQ,KAJF,mBAC1BF,EAD0B,KACdG,EADc,KAK3B5E,EAAgBf,aAAagB,QAAQ,iBAW3C,OAVAzB,qBAAU,WACRI,IAAMsB,IAAI,gCAAiC,CACzCpB,QAAS,CACP,cAAgB,UAAhB,OAA2BkB,MAE5BjB,MAAK,SAACC,GACP4F,EAAc5F,EAAIG,WAEnB,CAACa,IAEGyE,EG3IYI,GACbvG,EAAUC,cAGVuG,EAAW,kBAAOL,EAAWE,QAAUF,EAAWE,OAAOpD,OAAS,GAmBxE,OACE,sBAAKrF,UArBuBqI,EAAe,0BAA2B,cAqBtE,UACE,sBAAKrI,UAAU,eAAf,WACI4I,KAAc,cAACC,EAAA,EAAD,CAAc7I,UAAU,aACvC4I,KAAc,qBAAK5I,UAAU,eAAeC,IAAI,YAAYC,IAAKqI,EAAWE,OAAO,GAAGhI,MACtF4H,GAAe,cAAC,IAAWhI,KAAZ,CAAiBL,UAAU,cAA3B,SAA0CuI,EAAWC,kBAEvE,cAAC,IAAD,CAAQhI,QAAS,kBAAK8H,GAAgBD,IAAcS,KAAK,UAAUxI,MAAO,CAAEyI,aAAc,IAA1F,SACKC,IAAMC,cAAeZ,EAAmCa,IAArBC,OAExC,eAAC,IAAD,CACEC,aAAc,CAACjB,GACfkB,iBAAkBhB,EAClBrI,UAAU,cACVsJ,MAAM,OACNC,KAAK,SACLC,oBAAqB,CAACrC,EAAUjG,OAAOuI,YACvCjJ,QAAS,SAACkJ,GAAD,OAlCS,SAACC,GACvB,IAAMC,EAAcD,EACdpG,EAAS1C,OAAOC,SAASyC,OAE/B,OADA6E,EAAewB,GACXA,IAAgB3C,EAAa4C,OACxBzH,EAAQgB,KAAR,eACEwG,IAAgB3C,EAAa9F,SAC/BiB,EAAQgB,KAAR,2BAAiCG,IAC/BqG,IAAgB3C,EAAa6C,aAC/B1H,EAAQgB,KAAR,+BAAqCG,IACnCqG,IAAgB3C,EAAa/F,OAC/BkB,EAAQgB,KAAR,8BAAoCG,IAClCqG,IAAgB3C,EAAa8C,KAC/B3H,EAAQgB,KAAR,4BAAkCG,SADpC,EAsBWyG,CAAgBN,EAAEO,MAPlC,UASE,cAAC,IAAKC,KAAN,CAAqCC,KAAM,cAACC,EAAA,EAAD,IAA3C,mBAAgBnD,EAAa4C,QAC7B,cAAC,IAAKK,KAAN,CAAqCC,KAAM,cAACE,EAAA,EAAD,IAA3C,mBAAgBpD,EAAa/F,QAC7B,cAAC,IAAKgJ,KAAN,CAAWC,KAAM,cAACG,EAAA,EAAD,IAAjB,sBAA4CrD,EAAa9F,UACzD,cAAC,IAAK+I,KAAN,CAAWC,KAAM,cAACI,EAAA,EAAD,IAAjB,0BAA4CtD,EAAa6C,cACzD,cAAC,IAAKI,KAAN,CAAWC,KAAM,cAACK,EAAA,EAAD,IAAjB,iBAA8CvD,EAAa8C,a,0BCjEpDU,ICLVC,GASAC,GDJUF,GATf,SAA4B1K,GAA8E,IACjG6K,EAAiB7K,EAAjB6K,EAAGC,EAAc9K,EAAd8K,EAAGC,EAAW/K,EAAX+K,QACb,OACE,mBAAGC,UAAS,oBAAeH,EAAf,YAAoBC,EAApB,KAAZ,SACE,sBAAM7K,UAAU,YAAY4K,EAAG,EAAGC,EAAG,EAAGG,GAAI,EAAGC,WAAW,MAAMF,UAAU,aAAaG,QAAQ,OAAOC,KAAK,UAA3G,SAAsHL,EAAQrD,W,+CCA/HiD,K,YAAAA,E,4BAAAA,E,gBAAAA,E,kBAAAA,E,cAAAA,E,qBAAAA,Q,cASAC,K,sBAAAA,E,yBAAAA,Q,KAmHUxJ,I,GAAAA,GA9GR,WACL,IACMwC,EADS9C,OAAOC,SAASyC,OACL6H,MAAM,mBAAoB,GAF3B,EAGmBvJ,mBAAS,CACnDyD,cAAc,EACdC,QAAQ,EACRC,SAAS,EACTC,OAAO,EACPC,UAAU,IARa,mBAGlB2F,EAHkB,KAGFC,EAHE,OAUGzJ,mBAA6B6I,GAAmBa,MAVnD,mBAUlBC,EAVkB,KAUVC,EAVU,OAaiB5J,mBAAsB,IAbvC,mBAalB6J,EAbkB,KAaHC,EAbG,OAcD9J,mBAAS,GAdR,mBAclB+J,EAdkB,KAcZC,EAdY,OAgBShK,mBAAoB8I,GAAUmB,YAhBvC,mBAgBlBC,EAhBkB,KAgBPC,EAhBO,KAkBnBC,EAAWC,uBAAY,SAAChG,GAC5B,OAAIsF,IAAWd,GAAmBa,KAAarF,EAE3C6F,IAAcpB,GAAUmB,WACnB5F,EAAUiG,MAAK,SAACtI,EAAGuI,GAAJ,OAAUvI,EAAE2H,GAAWY,EAAEZ,MAExCtF,EAAUiG,MAAK,SAACtI,EAAGuI,GAAJ,OAAUA,EAAEZ,GAAW3H,EAAE2H,QAGhD,CAACA,EAAQO,IAENM,EAAeH,uBAAY,SAAChG,GAChC,OAAOA,EAAUoG,MACF,IAAZV,EAAO,GACM,IAAZA,EAAO,GAAW,MAErB,CAACA,IAlCqB,EAqCShG,EAA2BjC,GArCpC,mBAqClBuC,EArCkB,KAqCPC,EArCO,KA+CzB,OAPA7D,qBAAU,WACR,IAAMiK,EAAaN,EAAS/F,GAC5BC,EAAaoG,GACbZ,EAAiBU,EAAaE,MAC7B,CAACf,EAAQO,EAAW7F,EAAW+F,EAAUI,EAAclG,IAIxD,sBAAKnG,UAAU,cAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,WAAf,SACE,eAAC,KAAD,CAAUwM,eAAgB,MAAOC,OAAO,WAAWxL,MAAO,IAAKyL,OAAQ,KAAMzJ,KAAMyI,EAAnF,UACE,cAAC,KAAD,CAAeiB,gBAAgB,QAC/B,cAAC,KAAD,CAAO7D,KAAK,WAEZ,cAAC,KAAD,CAAO8D,KAAM,cAAC,GAAD,IAAsB9D,KAAK,WAAW7H,MAAO,IAAK4L,SAAU,EAAGC,QAAQ,SACpF,cAAC,KAAD,IACA,cAAC,KAAD,IACCzB,EAAe/F,cAAgB,cAAC,KAAD,CAAKwH,QAAQ,eAAe3B,KAAK,YAChEE,EAAe9F,QAAU,cAAC,KAAD,CAAKuH,QAAQ,SAAS3B,KAAK,YACpDE,EAAe7F,SAAW,cAAC,KAAD,CAAKsH,QAAQ,UAAU3B,KAAK,YACtDE,EAAe5F,OAAS,cAAC,KAAD,CAAKqH,QAAQ,QAAQ3B,KAAK,YAClDE,EAAe3F,UAAY,cAAC,KAAD,CAAKoH,QAAQ,WAAW3B,KAAK,iBAI7D,sBAAKnL,UAAU,oBAAf,UACE,cAAC,IAAWK,KAAZ,CAAiBC,MAAO,CAACyM,SAAU,OAAQC,WAAY,QAAvD,wBACA,cAAC,KAAD,CAAYC,QAAM,EAACC,SAAU,SAACtB,GAAD,OAAUC,EAAQD,IAAOuB,QAASvB,EAAMwB,SArDxD,GAqDgFC,MAAOnH,EAAUb,eAGlH,sBAAKrF,UAAU,uBAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,cAAC,IAAWK,KAAZ,CAAiBC,MAAO,CAACyM,SAAU,OAAQC,WAAY,QAAvD,sBACA,gCAAK,cAAC,KAAD,CAAUM,QAASjC,EAAe/F,aAAc4H,SAAU,kBAAMK,EAAc,mBAAkB,sBAAMvN,UAAU,oBAAhB,6BACrG,gCAAK,cAAC,KAAD,CAAUsN,QAASjC,EAAe9F,OAAQ2H,SAAU,kBAAMK,EAAc,aAAY,sBAAMvN,UAAU,oBAAhB,uBACzF,gCAAK,cAAC,KAAD,CAAUsN,QAASjC,EAAe7F,QAAS0H,SAAU,kBAAMK,EAAc,cAAa,sBAAMvN,UAAU,oBAAhB,wBAC3F,gCAAK,cAAC,KAAD,CAAUsN,QAASjC,EAAe5F,MAAOyH,SAAU,kBAAMK,EAAc,YAAW,sBAAMvN,UAAU,oBAAhB,sBACvF,gCAAK,cAAC,KAAD,CAAUsN,QAASjC,EAAe3F,SAAUwH,SAAU,kBAAMK,EAAc,eAAc,sBAAMvN,UAAU,oBAAhB,4BAE/F,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAWK,KAAZ,CAAiBC,MAAO,CAACyM,SAAU,OAAQC,WAAY,QAAvD,qBACA,eAAC,KAAMpF,MAAP,CAAaH,MAAO+D,EAAQ0B,SAAU,SAACxD,GAAD,OAAO+B,EAAU/B,EAAElC,OAAOC,QAAQnH,MAAO,CAACkN,QAAS,OAAQC,cAAe,SAAUC,WAAY,cAAtI,UACE,cAAC,KAAD,CAAOjG,MAAOiD,GAAmBa,KAAjC,SAAwC,sBAAMvL,UAAU,oBAAhB,oBACxC,cAAC,KAAD,CAAOyH,MAAOiD,GAAmBpF,aAAcqI,UAAWtC,EAAe/F,aAAzE,SAAuF,sBAAMtF,UAAU,oBAAhB,4BACvF,cAAC,KAAD,CAAOyH,MAAOiD,GAAmBnF,OAAQoI,UAAWtC,EAAe9F,OAAnE,SAA2E,sBAAMvF,UAAU,oBAAhB,sBAC3E,cAAC,KAAD,CAAOyH,MAAOiD,GAAmBlF,QAASmI,UAAWtC,EAAe7F,QAApE,SAA6E,sBAAMxF,UAAU,oBAAhB,uBAC7E,cAAC,KAAD,CAAOyH,MAAOiD,GAAmBjF,MAAOkI,UAAWtC,EAAe5F,MAAlE,SAAyE,sBAAMzF,UAAU,oBAAhB,qBACzE,cAAC,KAAD,CAAOyH,MAAOiD,GAAmBhF,SAAUiI,UAAWtC,EAAe3F,SAArE,SAA+E,sBAAM1F,UAAU,oBAAhB,8BAInF,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAWK,KAAZ,CAAiBC,MAAO,CAACyM,SAAU,OAAQC,WAAY,QAAvD,wBACA,eAAC,KAAMpF,MAAP,CAAaH,MAAOsE,EAAWmB,SAAU,SAACxD,GAAD,OAAMsC,EAAatC,EAAElC,OAAOC,QAAQnH,MAAO,CAACkN,QAAS,OAAQC,cAAe,SAAUC,WAAY,cAA3I,UACE,cAAC,KAAD,CAAOjG,MAAOkD,GAAUiD,UAAWD,SAAUnC,IAAWd,GAAmBa,KAA3E,SAAkF,sBAAMvL,UAAU,oBAAhB,yBAClF,cAAC,KAAD,CAAOyH,MAAOkD,GAAUmB,WAAY6B,SAAUnC,IAAWd,GAAmBa,KAA5E,SAAmF,sBAAMvL,UAAU,oBAAhB,sCAS9F,SAASuN,EAAcM,GACtBvC,EAAkB,2BAAID,GAAL,kBAAsBwC,GAAWxC,EAAewC,Q,qECpH7DC,GAAW,CACf,UACA,UACA,UACA,UACA,WAGIC,IAEL,qBACE7G,EAAc5B,aAAe,CAAC,EAAE,IADlC,eAEE4B,EAAc3B,OAAS,CAAC,EAAE,IAF5B,eAGE2B,EAAcxB,SAAW,CAAC,EAAG,IAH/B,eAIEwB,EAAc1B,QAAU,CAAC,EAAG,IAJ9B,eAKE0B,EAAczB,MAAQ,CAAC,EAAG,MAL5B,IA+JcqE,OAtJf,WAAyB,IAAD,EACJ9H,YAAW,CAAC,kBAAvB4B,EADe,oBAEhBL,EAAS1C,OAAOC,SAASyC,OACzBI,EAAaJ,EAAO6H,MAAM,mBAAoB,GAC9C4C,EAAezK,EAAO6H,MAAM,sBAAuB,GAJnC,EAKUvJ,mBAAS,CAACoM,EAAG/G,EAAc5B,aAAc4I,EAAGhH,EAAc3B,OAAQ4I,EAAGjH,EAAcxB,WAL7F,mBAKf0I,EALe,KAKLC,EALK,OAMFzI,EAA2BjC,GAAxCuC,EANe,sBAOFlB,IAAbC,EAPe,sBAQ4BpD,mBAA8B,IAR1D,mBAQfyM,EARe,KAQIC,EARJ,KAkBhBC,EAAc,SAACC,GAAD,OAClB,eAAC,IAAD,CAAMjO,QAAS,SAACkJ,GAAD,OALO,SAACA,EAAQ+E,GAC/BJ,EAAY,2BAAID,GAAL,kBAAgBK,EAAO/E,EAAEO,OAIdD,CAAgBN,EAAG+E,IAAzC,UACE,cAAC,IAAKvE,KAAN,0BAAgBhD,EAAc5B,cAG9B,cAAC,IAAK4E,KAAN,oBAAgBhD,EAAc3B,QAG9B,cAAC,IAAK2E,KAAN,qBAAgBhD,EAAc1B,SAG9B,cAAC,IAAK0E,KAAN,mBAAgBhD,EAAczB,OAG9B,cAAC,IAAKyE,KAAN,sBAAgBhD,EAAcxB,cAwBlC,OACE,sBAAK1F,UAAU,WAAf,UAEGsO,EAAkBjJ,OAAS,GAAK,qBAAKrF,UAAU,oBAAf,SAC/B,sBAAKA,UAAU,gBAAf,0CAEE,uBAAMA,UAAU,aAAaoH,SAxBb,SAACC,GACvBA,EAAIC,iBACJ,IAAMC,EAAuBF,EAAIG,OAAO,GAAGC,MACrCC,EAAWC,eAAK1C,GAAW,SAACyC,GAA0C,OAAOA,EAASvC,OAASoC,MNzClG,SAAP,qCM0CImH,CAAmBhH,EAAUnD,GAAIX,GAASf,MAAK,SAACC,GAC9CyL,EAAqB,GAAD,oBAAKD,GAAL,CAAwB,CAAC5G,SAAUA,EAAWxB,UAAWpD,EAAK6L,SAAS,UAmBvF,UAEE,cAAC,IAAM/G,MAAP,CAAa5H,UAAU,cAAvB,SACE,cAAC,IAAD,CACE8H,YAAY,GACZC,QAxDL9C,EAAUb,KAAI,SAACtB,GAAkB,MAAO,CAAC,MAASA,EAAIqC,aA4DrD,cAAC,IAAD,CAAQ6C,SAAS,SAAjB,SAA0B,cAAC4G,GAAA,EAAD,cAOhC,qBAAK5O,UAAU,iBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,eAAf,SAA+B6O,oBAAUT,EAASH,KAClD,sBAAKjO,UAAU,QAAf,UACE,eAAC,KAAD,CAAciB,MAAO,IAAKyL,OAAQ,IAChCoC,OAAQ,CAAEC,IAAK,GAAIC,MAAO,EAAGC,OAAQ,GAAIC,KAAM,GADjD,UAEE,cAAC,KAAD,CAAOpC,QAASsB,EAASH,EAAGnF,KAAK,SAASqG,OAAQpB,GAAeK,EAASH,GAAG9I,KAAK,iBAClF,cAAC,KAAD,CAAO2H,QAASsB,EAASF,EAAGpF,KAAK,SAASqG,OAAQpB,GAAeK,EAASF,GAAG/I,KAAK,WAClF,cAAC,KAAD,CAAO2H,QAASsB,EAASD,EAAGrF,KAAK,SAASsG,MAAO,CAAC,EAAG,KAAMjK,KAAK,YAChE,cAAC,KAAD,CAASkK,OAAQ,CAAE1C,gBAAiB,SACpC,cAAC,KAAD,IACA,cAAC,KAAD,CAAeA,gBAAgB,QAC/B,cAAC,KAAD,CAASxH,KAAMmK,KAAmBtB,GAAe/K,KAAMiD,EAAWiF,KAAK,YACtEmD,EAAkBlK,KAAI,SAACmL,EAAmBjM,GAApB,OACpBiM,EAAkBZ,SACnB,cAAC,KAAD,CACAxJ,KAAMoK,EAAkB7H,SAASvC,KACjClC,KAAMsM,EAAkBrJ,UACxBiF,KAAM2C,GAASxK,WAGnB,8BAAMuL,oBAAUT,EAASF,QAE3B,sBAAKlO,UAAU,oBAAf,UACKsO,EAAkBjJ,OAAS,GAAK,qDAChCiJ,EAAkBlK,KAAI,SAACsD,EAAUpE,GAAX,OACrB,8BACE,cAAC,KAAD,CACEgK,QAAS5F,EAASiH,QAClBnO,QAAS,kBA5DJ,SAACmD,GACtB,IAAK,IAAI6L,EAAI,EAAGA,EAAIlB,EAAkBjJ,OAAQmK,IACxClB,EAAkBkB,GAAG9H,SAASnD,KAAOZ,IACvC2K,EAAkBkB,GAAGb,SAAWL,EAAkBkB,GAAGb,SAGzDJ,EAAqB,aAAID,IAsDKmB,CAAe/H,EAASA,SAASnD,KAE/CvE,UAAU,2BAJZ,SAKK0H,EAASA,SAASvC,MAFhBuC,EAASA,SAASnD,iBAYrC,sBAAKvE,UAAU,oBAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,cAAC,IAAWK,KAAZ,6BACA,cAAC,KAAD,CAAUqP,QAASlB,EAAY,KAA/B,SACE,eAAC,IAAD,WACGK,oBAAUT,EAASH,GADtB,IAC0B,cAAC0B,GAAA,EAAD,YAI9B,sBAAK3P,UAAU,yBAAf,UACE,cAAC,IAAWK,KAAZ,6BACA,cAAC,KAAD,CAAUqP,QAASlB,EAAY,KAA/B,SACE,eAAC,IAAD,WACGK,oBAAUT,EAASF,GADtB,IAC0B,cAACyB,GAAA,EAAD,YAI9B,sBAAK3P,UAAU,yBAAf,UACE,cAAC,IAAWK,KAAZ,6BACA,cAAC,KAAD,CAAUqP,QAASlB,EAAY,KAA/B,SACE,eAAC,IAAD,WACGK,oBAAUT,EAASD,GADtB,IAC0B,cAACwB,GAAA,EAAD,mB,iBC7GvBC,OA3Df,WACE,OACE,qBAAK5P,UAAU,eAAf,SACI,sBAAKA,UAAU,gBAAf,UACE,cAAC,KAAD,CAAMA,UAAU,OAAO6P,MAAM,gBAAgBC,UAAU,EAAMxP,MAAO,CAACW,MAAO,QAA5E,SACE,cAAC,IAAW8O,UAAZ,odASF,cAAC,KAAD,CAAM/P,UAAU,OAAO6P,MAAM,8BAA8BC,UAAU,EAAMxP,MAAO,CAACW,MAAO,QAA1F,SACE,cAAC,IAAW8O,UAAZ,keAQF,eAAC,KAAD,CAAM/P,UAAU,wBAAwB6P,MAAM,mCAAmCC,UAAU,EAAMxP,MAAO,CAACW,MAAO,QAAhH,UACE,cAAC,KAAD,CAAMjB,UAAU,UAAU6P,MAAM,eAAeC,UAAU,EAAMxP,MAAO,CAACW,MAAO,QAA9E,SACE,cAAC,IAAW8O,UAAZ,6PAMF,cAAC,KAAD,CAAM/P,UAAU,UAAU6P,MAAM,SAASC,UAAU,EAAMxP,MAAO,CAACW,MAAO,QAAxE,SACE,cAAC,IAAW8O,UAAZ,0YAOF,cAAC,KAAD,CAAM/P,UAAU,UAAU6P,MAAM,UAAUC,UAAU,EAAMxP,MAAO,CAACW,MAAO,QAAzE,SACE,cAAC,IAAW8O,UAAZ,kQAMF,cAAC,KAAD,CAAM/P,UAAU,UAAU6P,MAAM,QAAQC,UAAU,EAAMxP,MAAO,CAACW,MAAO,QAAvE,SACE,cAAC,IAAW8O,UAAZ,oN,4BCoCC7O,OA7Ef,WACE,IAAMqC,EAAS1C,OAAOC,SAASyC,OACzBI,EAAaJ,EAAO6H,MAAM,mBAAoB,GAC9C4C,EAAezK,EAAO6H,MAAM,sBAAuB,GAHzC,ER0OX,SAAkCzH,GAAqB,IAAD,EACP9B,mBAAiB,IADV,mBACpDmO,EADoD,KAChCC,EADgC,KAErDnM,EAAgBf,aAAagB,QAAQ,iBAY3C,OAVAzB,qBAAU,WACRI,IAAMsB,IAAN,+CAAkDL,EAAlD,WAAuE,CACrEf,QAAS,CACP,cAAgB,UAAhB,OAA2BkB,MAE5BjB,MAAK,SAACC,GACPmN,EAAsBnN,EAAIG,KAAK,GAAGxC,WAI/B,CAACuP,EAAoBC,GQpPCC,CAAyBvM,GAA/CqM,EAJS,sBR0GX,SAA4BrM,GAAqB,IAAD,EACpB9B,mBAAmB,CAClDsD,KAAM,GACNZ,GAAI,GACJ4L,YAAa,GACbC,MAAO,CAAE5H,aAAc,IACvBtE,OAAQ,CAACD,MAAO,IAChBoM,UAAW,CAAChD,MAAO,KAPgC,mBAC9C3F,EAD8C,KACpCxC,EADoC,KAS/CpB,EAAgBf,aAAagB,QAAQ,iBAW3C,OAVAzB,qBAAU,WACRI,IAAMsB,IAAN,+CAAkDL,GAAc,CAC9Df,QAAS,CACP,cAAgB,UAAhB,OAA2BkB,MAE5BjB,MAAK,SAACC,GACPoC,EAAapC,EAAIG,WAElB,CAACa,EAAeH,IAEZ,CAAC+D,EAAUxC,GQzHCoL,CAAmB3M,GAA/B+D,EALS,sBRgDX,SAAoC/D,EAAoBqK,GAAuB,IAAD,EAC3DnM,mBAAS,CAAC,aAC/BsD,KAAM,gBAAiB6I,EAAe,GADR,aAE9B7I,KAAM,UAAW6I,EAAe,GAFF,aAG9B7I,KAAM,WAAY6I,EAAe,KAJ+C,mBAC5E/K,EAD4E,KACtEsN,EADsE,KAM7EzM,EAAgBf,aAAagB,QAAQ,iBAgD3C,OA9CAzB,qBAAU,WACRI,IAAMsB,IAAN,+CAAkDL,EAAlD,WAAuE,CACrEf,QAAS,CACP,cAAgB,UAAhB,OAA2BkB,MAE5BjB,MAAK,SAACC,GAEP,OADeA,EAAIG,KAAKgB,MAAMG,KAAI,SAACsD,GAAoB,OAAO,eAAEA,EAASpD,MAAMa,KAAxB,eAAmCuC,UAEzF7E,MAAK,SAACqB,GAEP,OADiBA,EAAOE,KAAI,SAACC,GAAD,OAAmDA,EAASmM,OAAOC,KAAKpM,GAAU,IAAIC,MAAMC,MAAIC,KAAK,QAEhI3B,MAAK,SAACsB,GACP,OAAOzB,IAAMsB,IAAN,wDAA2DG,GAAY,CAC5EvB,QAAS,CACP,cAAgB,UAAhB,OAA2BkB,SAG9BjB,MAAK,SAACC,GACP,OAAKA,EACiBA,EAAIG,KAAKwB,eADd,MAGhB5B,MAAK,SAACiC,GAcP,OAbiBA,EAAcH,QAAO,SAACC,EAAUC,GAAc,MAAO,CACpES,aAAcV,EAAIU,aAAeT,EAAIS,aAAaR,EAAcO,OAChEE,OAAQX,EAAIW,OAASV,EAAIU,OAAOT,EAAcO,OAC9CG,QAASZ,EAAIY,QAAUX,EAAIW,QAAQV,EAAcO,OACjDI,MAAOb,EAAIa,MAAQZ,EAAIY,MAAMX,EAAcO,OAC3CK,SAAUd,EAAIc,SAAWb,EAAIa,SAASZ,EAAcO,UAClD,CACFC,aAAc,EACdC,OAAQ,EACRC,QAAS,EACTC,MAAO,EACPC,SAAU,OAGX7C,MAAK,SAAC6N,GACP,IAAMzN,EAAO,CACXqC,aAAa,aAAEH,KAAM,gBAAiB6I,EAAe0C,EAASpL,cAC9DC,OAAO,aAAEJ,KAAM,UAAW6I,EAAe0C,EAASnL,QAClDC,QAAQ,aAAEL,KAAM,WAAY6I,EAAe0C,EAASlL,UAEtD+K,EAAQC,OAAOG,OAAO1N,SAEvB,CAACa,EAAeH,EAAYqK,IAExB,CAAC/K,EAAMsN,GQhGCK,CAA2BjN,EAAYqK,GAA/C/K,EANS,oBAyBhB,SAAS4N,EAAW5G,GAClB,IAAM6G,EAAMnJ,eAAK1E,GAAM,SAAC8N,GAAD,OAAYA,EAAQ5L,OAAS8E,KAAM+D,GAC1D,MAAM,GAAN,OAAUrI,gBAAY,IAANmL,EAAW,GAA3B,KAGF,OACE,sBAAK9Q,UAAU,aAAf,UAEE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,qBAAqBC,IAAI,iBAAiBC,IAAK8P,IAC9D,sBAAKhQ,UAAU,sBAAf,UACE,cAAC,IAAWK,KAAZ,CAAiBL,UAAU,cAA3B,8BAAwDsP,KAAmBtB,MAC3E,cAAC,IAAW3N,KAAZ,CAAiBL,UAAU,iBAA3B,SAA6C0H,EAASyI,cACtD,eAAC,IAAW9P,KAAZ,kBAAuBqH,EAAS0I,MAAM5H,wBAK5C,sBAAKxI,UAAU,gBAAf,UACE,eAAC,IAAWK,KAAZ,sBAA0B2D,cAAI0D,EAAU,eAAgB,IAAIrC,OAA5D,OACA,eAAC,IAAWhF,KAAZ,8BAAkC2Q,KArCD,IAAjCtJ,EAASxD,OAAOD,MAAMoB,OAAqB,EACnCqC,EAASxD,OAAOD,MAAMU,QAAO,SAACsM,EAAKC,GAC7C,OAAOD,EAAOjN,cAAIkN,EAAM,uBACvB,IAkCC,OACA,eAAC,IAAW7Q,KAAZ,gCAAoC2Q,KA9BH,IAAjCtJ,EAASxD,OAAOD,MAAMoB,OAAqB,EACnCqC,EAASxD,OAAOD,MAAMU,QAAO,SAACsM,EAAKC,GAC7C,OAAOD,EAAOjN,cAAIkN,EAAM,uBACvB,GACQxJ,EAASxD,OAAOD,MAAMoB,QA0B7B,OACA,eAAC,IAAWhF,KAAZ,yBAA6BqH,EAAS2I,UAAUhD,MAAhD,UAGF,eAAC,IAAWjN,MAAZ,CAAkBJ,UAAU,aAAagB,MAAO,EAAhD,6BAAoEsO,KAAmBtB,MACvF,qBAAKhO,UAAU,aAAf,SACE,eAAC,KAAD,CAAYmR,GAAI,MAAOC,YAAa,IAAKnQ,MAAO,IAAKyL,OAAQ,IAAKoC,OAAQ,CAACC,IAAK,IAAK9L,KAAMA,EAA3F,UACE,cAAC,KAAD,IACA,cAAC,KAAD,CAAgB6J,QAAQ,OAAOuE,OAAO,UACtC,cAAC,KAAD,CAAiBC,MAAO,GAAInC,OAAQ,CAAC,EAAG,KACxC,cAAC,KAAD,CAAOhK,KAAM6I,EAAclB,QAASkB,EAAcqD,OAAO,UAAUlG,KAAK,UAAUoG,YAAa,UAGnG,sBAAKvR,UAAU,YAAf,UACE,eAAC,IAAWK,KAAZ,+BAAmCwQ,EAAW,cAC9C,eAAC,IAAWxQ,KAAZ,oCAAwCwQ,EAAW,mBACnD,eAAC,IAAWxQ,KAAZ,8BAAkCwQ,EAAW,gBAG/C,cAAC,IAAWzQ,MAAZ,CAAkBJ,UAAU,aAAagB,MAAO,EAAhD,uBACA,qBAAKhB,UAAU,YAAf,SACG0H,EAASxD,OAAOD,MAAMG,KAAI,SAACE,EAAoBhB,GAArB,OACzB,eAAC,IAAWjD,KAAZ,CAAiBC,MAAO,CAACkR,YAAa,IAAtC,UAA4ClO,EAAM,EAAlD,KAAuD8B,mBAASd,EAAMA,MAAMa,KAAM,CAACE,OAAQ,iBC9BtFoM,OApCf,WAAqB,IAAD,EACoB5P,mBAASoF,EAAayK,MAD1C,mBACXvJ,EADW,KACEC,EADF,KAEZ7E,EAAS1C,OAAOC,SAASyC,OACzByK,EAAesB,KAAmB/L,EAAO6H,MAAM,sBAAuB,IACtEuG,EAAWC,cAAcC,SAqB/B,OAnBAvP,qBAAU,WACR8F,EAAeuJ,EAASjO,UAAUoO,sBAAYH,EAAU,KAAO,MAC9D,CAACA,IAkBF,sBAAK3R,UAAU,eAAf,UACE,cAAC,GAAD,CAASmI,YAAaA,EAAaC,eAAgBA,IACnD,sBAAKpI,UAAU,aAAf,UACE,cAAC,KAAD,CAAYA,UAAU,aAAa6P,MAAK,UAAKhB,oBAAU1G,GAAf,UAAqC4J,SAAQ,uBAAkB/D,KAnB7G,WACE,GAAI7F,IAAgBlB,EAAa9F,SAC/B,OAAO,cAAC,GAAD,IACF,GAAIgH,IAAgBlB,EAAa8C,KACtC,OAAO,cAAC,GAAD,IACF,GAAI5B,IAAgBlB,EAAayK,UAEjC,IAAIvJ,IAAgBlB,EAAa/F,OACtC,OAAO,cAAC,GAAD,IACF,GAAIiH,IAAgBlB,EAAa6C,aACtC,OAAO,cAAC,GAAD,KAUJkI,UCLMC,OA3Bf,WAAgB,IAAD,EdFR,WACL,IAAMC,EAAgBC,KAAKC,MAAMrP,aAAagB,QAAQ,WAAa,SAD9B,EAETlC,mBAASqQ,GAFA,mBAG/BG,EAAa,CACjB3Q,OAJmC,KAKnCK,UALmC,MAQrC,MAAO,CADPjC,EAAcwS,wBAAcD,GACPA,GcLqBE,GAD7B,mBACNzS,EADM,KACO0S,EADP,KAGb,OACE,qBAAKxS,UAAU,MAAf,SACE,cAACyS,EAAA,EAAD,UACE,cAAC3S,EAAY4S,SAAb,CAAsBjL,MAAO+K,EAA7B,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAcG,KAAK,iBAAnB,SACE,cAAC,GAAD,MAEF,cAAC,EAAD,CAAcA,KAAK,cAAnB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAIC,UAAW/S,gBCf1BgT,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBlQ,MAAK,YAAkD,IAA/CmQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.9c835259.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/collage.049726ee.jpg\";","export default __webpack_public_path__ + \"static/media/report.e080a35d.png\";","export default __webpack_public_path__ + \"static/media/barGraph.623f29bb.png\";","export default __webpack_public_path__ + \"static/media/scatter.d49d4958.png\";","import React from 'react';\nimport \"../styles/common.css\";\nimport './Home.css';\nimport BackgroundImage from '../images/collage.jpg';\nimport {Button, Carousel, Typography} from 'antd';\nimport Report from '../images/report.png';\nimport BarGraph from '../images/barGraph.png';\nimport Scatter from '../images/scatter.png';\n\nfunction Home(props: any) {\n\n  const authorize = () => {\n    let url = 'https://accounts.spotify.com/authorize';\n    url += '?response_type=code';\n    url += '&client_id=' + encodeURIComponent(process.env.REACT_APP_CLIENT_ID!);\n    url += '&code_challenge_method=' + encodeURIComponent('S256');\n    url += '&redirect_uri=' + encodeURIComponent(process.env.REDIRECT_URI!);\n    url += '&code_challenge=' + encodeURIComponent(process.env.REACT_APP_CODE_CHALLENGE!);\n    window.location = url as unknown as Location;\n  }\n\n  return (\n    <div className=\"rootContainer\">\n      <div className=\"imageContainer\">\n        <img alt=\"background\" className=\"titleImage\" src={BackgroundImage}/>\n      </div>\n      <div className=\"contentContainer\">\n        <div className=\"leftContainer\">\n          <div className=\"wrapper\">\n            <Typography.Title>Trumendous Tracks</Typography.Title>\n            <Typography.Text>Make the most fire playlist ever</Typography.Text>\n            <Button style={{marginTop: 20}} onClick={authorize}>Get Started</Button>\n          </div>\n        </div>\n        <div className=\"rightContainer\">\n          <Carousel autoplay>\n            <div className=\"carouselContentDiv\">\n              <Typography.Title level={4}>Generate a playlist report</Typography.Title>\n              <img width={'700px'} alt=\"report\" className=\"reportImage\" src={Report}/>\n            </div>\n            <div className=\"carouselContentDiv\">\n            <Typography.Title level={4}>Sort the data in a bar graph and find outliers</Typography.Title>\n              <img width={'700px'} alt=\"report\" className=\"reportImage\" src={BarGraph}/>\n            </div>\n            <div className=\"carouselContentDiv\">\n            <Typography.Title level={4}>Compare the data with other playlists</Typography.Title>\n              <img width={'700px'} alt=\"report\" className=\"reportImage\" src={Scatter}/>\n            </div>\n          </Carousel>\n        </div>\n\n      </div>\n    </div>\n\n  )\n}\n\nexport default Home;\n","import { createContext, useContext, useState } from 'react';\n\ninterface AuthContextType {\n  isAuth: boolean,\n  setIsAuth: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nlet AuthContext: React.Context<AuthContextType>;\n\nexport function useCreateAuthContext() {\n  const isAuthDefault = JSON.parse(localStorage.getItem('isAuth') || 'false');\n  const [isAuth, setIsAuth] = useState(isAuthDefault);\n  const defaultVal = {\n    isAuth,\n    setIsAuth\n  };\n  AuthContext = createContext(defaultVal);\n  return [AuthContext, defaultVal] as [typeof AuthContext, typeof defaultVal];\n};\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n","import { Route, Redirect } from 'react-router-dom';\nimport { useAuth } from '../context/auth';\n\nconst PrivateRoute = ({children, ...rest}) => {\n  const {isAuth} = useAuth();\n  return (\n  <Route {...rest}>\n    {\n    (isAuth === true)\n    ? {...children}\n    : <Redirect to=\"/\"/>\n    }\n  </Route>\n  )\n};\n\nexport default PrivateRoute;\n","import React, { useEffect, useState } from 'react';\nimport {useAuth} from '../context/auth';\nimport { useCookies } from 'react-cookie';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nfunction Login() { \n  const [,setIsError] = useState(false);\n  const {isAuth, setIsAuth} = useAuth();\n  const [,setCookie] = useCookies(['Authorization', 'Refresh']);\n  const [code, setCode] = useState('');\n  const history = useHistory();\n\n  useEffect(()=> {\n    if (code !== '') {\n      const params = new URLSearchParams();\n      params.append('client_id', process.env.REACT_APP_CLIENT_ID!);\n      params.append('grant_type', 'authorization_code');\n      params.append('code', code);\n      params.append('redirect_uri', process.env.REDIRECT_URI!);\n      params.append('code_verifier', process.env.REACT_APP_CODE_VERIFIER!);\n\n      axios.post('https://accounts.spotify.com/api/token', params, { headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }}).then((res)=> {\n        localStorage.setItem('Authorization', res.data.access_token);\n        localStorage.setItem('Refresh', res.data.refresh_token);\n        setIsAuth(true);\n        history.push(\"/app/search\");\n      }).catch(()=> {\n        history.push(\"/\");\n      });\n    }\n  }, [code, isAuth, setCookie, setIsAuth, history])\n\n  const search = window.location.search;\n  let index;\n\n  if (search.includes('error')){\n    setIsError(true);\n  }\n\n  if (code === '' && (index = search.indexOf('code=')) !== -1) {\n    setCode(search.substring(index + 5));\n  }\n \n  return (<div></div>);\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/search-solid.623743d0.svg\";","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { isEmpty, round, truncate } from \"lodash\";\nimport { GraphData, Playlist, TrackObject, Track, AudioAnalysis} from \"../constants/types\";\n\naxios.interceptors.response.use(\n  res => res,\n  (error) => {\n    const originalRequest = error.config;\n    if (error.response.status === 401) {\n      localStorage.setItem('isAuth', 'false');\n      originalRequest._retry = true;\n      console.log(localStorage.getItem('Refresh'));\n      const params = new URLSearchParams();\n      params.append('grant_type', 'refresh_token');\n      params.append('refresh_token', localStorage.getItem('Refresh') || '');\n      params.append('client_id', '0132ec2527844f11a38d2534ba740119');\n      axios.post('https://accounts.spotify.com/api/token', params, { headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }}).then((res)=> {\n        localStorage.setItem('Authorization', res.data.access_token);\n        localStorage.setItem('Refresh', res.data.refresh_token);\n      }).then(()=> {\n        localStorage.setItem('isAuth', 'true');\n        window.location.reload();\n      });\n          \n    }\n  }\n)\n\nexport async function getGraphDataFromId(playlistId: string, cookies: { [name:string]: any}) {\n  const Authorization = localStorage.getItem('Authorization');\n  const tracks = await axios.get(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n    headers: {\n      'Authorization': `Bearer ${Authorization}`\n    }\n  }).then((res)=> {\n    return res.data.items;\n  });\n\n  const trackIds = tracks.map((trackObj: {track: {id:string}})=> trackObj.track.id).join(',');\n\n  const audioAnalysis = await axios.get(`https://api.spotify.com/v1/audio-features?ids=${trackIds}`, {\n    headers: {\n      'Authorization': `Bearer ${Authorization}`\n    }\n  }).then((res)=> {\n    const audioFeatures = res.data.audio_features;\n    const audioFeatureObjects = audioFeatures\n        .map((audioFeature: {id: string})=> {return {[audioFeature.id]: audioFeature}})\n        .reduce((acc: any, obj: any) => {return {...acc, ...obj}}, {});\n    return audioFeatureObjects;\n  });\n\n  return getGraphDataFromRawData(tracks, audioAnalysis);\n}\n\nexport function useGetRadarChartDataFromId(playlistId: string, playlistName: string) {\n  const [data, setData] = useState([\n    {name: 'danceability', [playlistName]: 0},\n    {name: 'energy', [playlistName]: 0},\n    {name: 'valence', [playlistName]: 0},\n  ]);\n  const Authorization = localStorage.getItem('Authorization');\n\n  useEffect(()=> {\n    axios.get(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n      headers: {\n        'Authorization': `Bearer ${Authorization}`\n      }\n    }).then((res)=> {\n      const tracks = res.data.items.map((playlist: Track)=> {return {[playlist.track.name]: {...playlist}}});\n      return tracks;\n    }).then((tracks)=> {\n      const trackIds = tracks.map((trackObj: {[key: string]: {track:{id:string}}})=> trackObj[Object.keys(trackObj)[0]].track.id).join(',');\n      return trackIds;\n    }).then((trackIds)=> {\n      return axios.get(`https://api.spotify.com/v1/audio-features?ids=${trackIds}`, {\n        headers: {\n          'Authorization': `Bearer ${Authorization}`\n        }\n      });    \n    }).then((res)=> {\n      if (!res) return [];\n      const audioFeatures = res.data.audio_features;\n      return audioFeatures;\n    }).then((audioAnalysis)=> {\n      const averages = audioAnalysis.reduce((acc: any, obj: any) => {return {\n        danceability: acc.danceability + obj.danceability/audioAnalysis.length,\n        energy: acc.energy + obj.energy/audioAnalysis.length,\n        valence: acc.valence + obj.valence/audioAnalysis.length,\n        tempo: acc.tempo + obj.tempo/audioAnalysis.length,\n        loudness: acc.loudness + obj.loudness/audioAnalysis.length,\n      }}, {\n        danceability: 0,\n        energy: 0,\n        valence: 0,\n        tempo: 0,\n        loudness: 0\n      });\n      return averages;\n    }).then((averages)=> {\n      const data = {\n        danceability: {name: 'danceability', [playlistName]: averages.danceability},\n        energy: {name: 'energy', [playlistName]: averages.energy},\n        valence: {name: 'valence', [playlistName]: averages.valence},\n      };\n      setData(Object.values(data));\n    });\n  }, [Authorization, playlistId, playlistName]);\n\n  return [data, setData] as [typeof data, typeof setData];\n}\n\n\nexport function useGetPlaylistById(playlistId: string) {\n  const [playlist, setPlaylists] = useState<Playlist>({\n    name: '',\n    id: '',\n    description: '',\n    owner: { display_name: ''},\n    tracks: {items: []},\n    followers: {total: 0}\n  });\n  const Authorization = localStorage.getItem('Authorization');\n  useEffect(()=> {\n    axios.get(`https://api.spotify.com/v1/playlists/${playlistId}`, {\n      headers: {\n        'Authorization': `Bearer ${Authorization}`\n      }\n    }).then((res)=> {\n      setPlaylists(res.data);\n    });\n  }, [Authorization, playlistId]);\n\n  return [playlist, setPlaylists] as [Playlist, typeof setPlaylists]\n}\n\nexport function useGetPlaylists() {\n  const [playlists, setPlaylists] = useState<Playlist[]>([]);\n  const Authorization = localStorage.getItem('Authorization');  \n  useEffect(()=> {\n    axios.get('https://api.spotify.com/v1/me/playlists', {\n      headers: {\n        'Authorization': `Bearer ${Authorization}`\n      }\n    }).then((res)=> {\n      setPlaylists(res.data.items);\n    });\n  }, [Authorization]);\n\n  return [playlists, setPlaylists] as [Playlist[], typeof setPlaylists];\n}\n\nexport function useGetUserObject() {\n  const [userObject, setUserObject] = useState<{\n    display_name: string,\n    images: {url:string}[]\n  }>({display_name: 'Harsh', images: []});\n  const Authorization = localStorage.getItem('Authorization');\n  useEffect(() => {\n    axios.get('https://api.spotify.com/v1/me', {\n      headers: {\n        'Authorization': `Bearer ${Authorization}`\n      }\n    }).then((res)=>{\n      setUserObject(res.data);\n    });\n  }, [Authorization]);\n\n  return userObject;\n}\n\n\nexport function useGetTracksForPlaylist(playlistId: string) {\n  const [tracks, setTracks] = useState([]);\n  const Authorization = localStorage.getItem('Authorization');  \n  useEffect(() => {\n    axios.get(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n      headers: {\n        'Authorization': `Bearer ${Authorization}`\n      }\n    }).then((res)=> {\n      setTracks(res.data.items);\n    });\n  }, [Authorization, playlistId]);\n\n  return tracks;\n}\n\nexport function useGetAudioFeaturesForTracks(tracks: {track:{id:string}}[]) {\n  const [audioAnalysis, setAudioAnalysis] = useState<AudioAnalysis>({});\n  const Authorization = localStorage.getItem('Authorization');  const trackIds = tracks.map((trackObj: {track: {id:string}})=> trackObj.track.id).join(',');\n\n  useEffect(()=> {\n    if (tracks.length === 0) return;\n    axios.get(`https://api.spotify.com/v1/audio-features?ids=${trackIds}`, {\n      headers: {\n        'Authorization': `Bearer ${Authorization}`\n      }\n    }).then((res)=> {\n      const audioFeatures = res.data.audio_features;\n      const audioFeatureObjects = audioFeatures\n          .map((audioFeature: {id: string})=> {return {[audioFeature.id]: audioFeature}})\n          .reduce((acc: any, obj: any) => {return {...acc, ...obj}}, {});\n      setAudioAnalysis(audioFeatureObjects);\n    });\n  }, [Authorization, trackIds, tracks]);\n\n  return audioAnalysis;\n}\n\nexport function getGraphDataFromRawData(tracks: TrackObject[], audioAnalysis: AudioAnalysis) {\n  return tracks\n    .map((trackObj: {track: {id: string, name:string}}) => {\n      return {\n        name: truncate(trackObj.track.name, {length: 18}),\n        danceability: audioAnalysis[trackObj.track.id].danceability,\n        energy: audioAnalysis[trackObj.track.id].energy,\n        valence: audioAnalysis[trackObj.track.id].valence,\n        tempo: audioAnalysis[trackObj.track.id].tempo,\n        loudness: round((audioAnalysis[trackObj.track.id].loudness + 60) / 60, 3)\n      }\n    });\n}\n\nexport function useGetGraphDataFromRawData(playlistId: string) {\n  const tracks = useGetTracksForPlaylist(playlistId);\n  const audioAnalysis = useGetAudioFeaturesForTracks(tracks);\n  let [graphData, setGraphData] = useState<GraphData[]>([]);\n  \n  // When the tracks and audio analysis is fetched map the graphdata\n  useEffect(() => {\n   if (isEmpty(tracks) || isEmpty(audioAnalysis)) return;\n   let graphData: GraphData[] = getGraphDataFromRawData(tracks, audioAnalysis);\n   \n   setGraphData(graphData);\n }, [tracks, audioAnalysis]);\n\n return [graphData, setGraphData] as [GraphData[], typeof setGraphData];\n}\n\n\nexport function useGetPlaylistCoverImage(playlistId: string) {\n  const [playlistCoverImage, setPlaylistCoverImage] = useState<string>('');\n  const Authorization = localStorage.getItem('Authorization');\n\n  useEffect(() => {\n    axios.get(`https://api.spotify.com/v1/playlists/${playlistId}/images`, {\n      headers: {\n        'Authorization': `Bearer ${Authorization}`\n      }\n    }).then((res)=> {\n      setPlaylistCoverImage(res.data[0].url);\n    })\n  })\n\n  return [playlistCoverImage, setPlaylistCoverImage] as [string, typeof setPlaylistCoverImage]\n}\n","import React from 'react';\nimport './Search.css';\nimport searchSolid from '../icons/search-solid.svg';\nimport {Input, AutoComplete, Button, Typography} from 'antd';\nimport {find} from 'lodash';\nimport { useHistory } from 'react-router-dom';\nimport { Playlist } from '../constants/types';\nimport { useGetPlaylists } from '../common/api';\n\nfunction Application(props: any) { \n  const [playlists] = useGetPlaylists();\n  const history = useHistory();\n  const searchInputTest = 'Search Here';\n\n  const getDropdownPlaylists = () => {\n    return playlists.map((res: Playlist)=> {return {'value': res.name}})\n  }\n\n  const onSubmit = (evt: any) => {\n    evt.preventDefault();\n    const selectedPlaylistName = evt.target[0].value;\n    const playlist = find(playlists, (playlist: {name:string, id:string})=>{ return playlist.name === selectedPlaylistName})!;\n    return history.push(`/app/playlist/report?playlistName=${playlist.name}&playlistId=${playlist.id}`);\n  }\n\n  return (\n    \n    <div className=\"background\">\n      <div className=\"pageContainer\">\n\n        <Typography.Title>Search for a playlist to get started</Typography.Title>\n        <div className=\"searchBox\">\n          <form className=\"searchForm\" onSubmit={onSubmit}>\n            \n              <Input.Group className=\"searchInput\" compact>\n                <AutoComplete\n                  placeholder={searchInputTest}\n                  options={getDropdownPlaylists()}\n                />\n              </Input.Group>\n              <Button htmlType=\"submit\"><img className=\"searchIcon\" alt=\"searchIcon\" src={searchSolid}></img></Button>\n\n          </form>\n        </div>\n      </div>\n    </div>\n    );\n}\n\nexport default Application;\n","export enum ContentTypes {\n  None = \"none\",\n  BarGraph = \"bar\",\n  ScatterGraph = \"scatter\",\n  Info = \"info\",\n  Report = \"report\",\n  Search = \"search\"\n}\n\nexport interface Playlist{\n  name: string;\n  id: string;\n  description: string;\n  owner: {\n    display_name: string;\n  };\n  tracks: {items: []};\n  followers: {total: number}\n}\n\nexport enum GraphFeatures {\n  danceability = 'danceability',\n  energy = 'energy',\n  valence = 'valence',\n  tempo = 'tempo',\n  loudness = 'loudness',\n}\n\nexport interface AudioAnalysis {\n  [key:string]: {\n    danceability: number;\n    energy: number;\n    valence: number;\n    tempo: number;\n    loudness: number;\n  }\n}\n\nexport interface GraphData {\n  name?: string;\n  danceability?: number;\n  energy?: number;\n  valence?: number;\n  tempo?: number;\n  loudness?: number;\n}\n\nexport interface PlaylistGraphData {\n  playlist: Playlist,\n  graphData: GraphData[],\n  visible: boolean\n}\n\nexport interface TrackObject {\n  track: {\n    id: string,\n    name: string\n  }\n}\n\nexport interface Track {\n  track: {\n    name: string\n  }\n}\n","import React, {useState} from 'react';\nimport './Sidebar.css';\nimport { Typography, Button, Menu } from 'antd';\nimport {\n  SearchOutlined,\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  BarChartOutlined,\n  PaperClipOutlined,\n  UserOutlined,\n  DotChartOutlined,\n  InfoCircleOutlined\n} from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\nimport { useGetUserObject } from '../common/api';\nimport {ContentTypes} from '../constants/types';\n\n\nenum MenuItems {\n  Search = \"Search\",\n  BarChart = \"BarChart\",\n  ScatterChart = \"ScatterChart\",\n  Report = \"Report\",\n  Extras = \"Extras\",\n  Info = \"Info\"\n}\n\nfunction Sidebar({contentType, setContentType}: {\n    contentType: ContentTypes, \n    setContentType: React.Dispatch<React.SetStateAction<ContentTypes>>\n  }) {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const userObject = useGetUserObject();\n  const history = useHistory();\n\n  const getSidebarName = () => (sidebarOpen) ? 'sidebarRoot sidebarOpen': 'sidebarRoot';\n  const hasImage = () => (userObject.images && userObject.images.length > 0);\n\n  const handleMenuClick = (item: React.Key) => {\n    const changedItem = item as ContentTypes;\n    const search = window.location.search;\n    setContentType(changedItem);\n    if (changedItem === ContentTypes.Search) {\n      return history.push(`/app/search`)\n    } else if (changedItem === ContentTypes.BarGraph){\n      return history.push(`/app/playlist/bar${search}`)\n    } else if (changedItem === ContentTypes.ScatterGraph){\n      return history.push(`/app/playlist/scatter${search}`)\n    } else if (changedItem === ContentTypes.Report) {\n      return history.push(`/app/playlist/report${search}`)\n    } else if (changedItem === ContentTypes.Info) {\n      return history.push(`/app/playlist/info${search}`)\n    }\n  }\n\n  return (\n    <div className={getSidebarName()}>\n      <div className=\"userInfoCard\">\n        {!hasImage() && <UserOutlined className=\"userIcon\"/>}\n        {hasImage() && <img className=\"profileImage\" alt=\"userImage\" src={userObject.images[0].url}></img>}\n        {sidebarOpen && <Typography.Text className=\"profileText\">{userObject.display_name}</Typography.Text>}\n      </div>\n      <Button onClick={()=> setSidebarOpen(!sidebarOpen)} type=\"primary\" style={{ marginBottom: 16 }}>\n          {React.createElement(!sidebarOpen ? MenuUnfoldOutlined : MenuFoldOutlined)}\n      </Button>\n      <Menu\n        selectedKeys={[contentType]}\n        inlineCollapsed={!sidebarOpen}\n        className=\"sidebarMenu\"\n        theme=\"dark\"\n        mode=\"inline\"\n        defaultSelectedKeys={[MenuItems.Report.toString()]}\n        onClick={(e)=>handleMenuClick(e.key)}\n      >\n        <Menu.Item key={ContentTypes.Search} icon={<SearchOutlined />}>Search</Menu.Item>\n        <Menu.Item key={ContentTypes.Report} icon={<PaperClipOutlined />}>Report</Menu.Item>\n        <Menu.Item icon={<BarChartOutlined />} key={ContentTypes.BarGraph}>Bar Chart</Menu.Item>\n        <Menu.Item icon={<DotChartOutlined />} key={ContentTypes.ScatterGraph}>Scatter Chart</Menu.Item>\n        <Menu.Item icon={<InfoCircleOutlined />} key={ContentTypes.Info}>Info</Menu.Item>\n        \n      </Menu>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport { JsxElement } from 'typescript';\nimport './CustomizedTick.css';\n\nfunction CustomizedAxisTick(props: {x: number, y: number, stroke: string, payload: {value: JsxElement}}) {\n  const {x, y, payload} = props;\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text className=\"graphText\" x={0} y={0} dy={3} textAnchor=\"end\" transform=\"rotate(10)\" opacity=\"0.85\" fill=\"#ffffff\">{payload.value}</text>\n    </g>\n  );\n}\n\nexport default CustomizedAxisTick;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport { BarChart, Legend, CartesianGrid, XAxis, YAxis, Tooltip, Bar} from 'recharts';\nimport CustomizedAxisTick from '../components/CustomizedTick';\nimport { Typography, Checkbox, Radio, Pagination} from 'antd';\nimport { useGetGraphDataFromRawData } from '../common/api';\nimport { GraphData } from '../constants/types';\nimport \"./BarGraph.css\";\n\nenum RadioSortByOptions {\n  none = 'none',\n  danceability = 'danceability',\n  energy = 'energy',\n  valence = 'valence',\n  tempo = 'tempo',\n  loudness = 'loudness',\n}\n\nenum SortOrder {\n  ascending = 'ascending',\n  descending = 'descending',\n}\n\nexport function BarGraph() {\n  const search = window.location.search;\n  const playlistId = search.match(/playlistId=(.*)/)![1];\n  const [activeFeatures, setActiveFeatures] = useState({\n    danceability: true,\n    energy: false,\n    valence: false,\n    tempo: false,\n    loudness: false\n  })\n  const [sortBy, setSortBy] = useState<RadioSortByOptions>(RadioSortByOptions.none);\n  \n  \n  const [paginatedData, setPaginatedData] = useState<GraphData[]>([]);\n  const [page, setPage] = useState(1);\n  const itemsPerPage = 30;\n  const [sortOrder, setSortOrder] = useState<SortOrder>(SortOrder.descending);\n\n  const sortData = useCallback((graphData: GraphData[]): GraphData[] => {\n    if (sortBy === RadioSortByOptions.none) return graphData;\n\n    if (sortOrder === SortOrder.descending) {\n      return graphData.sort((a, b) => a[sortBy]! - b[sortBy]!);\n    } else {\n      return graphData.sort((a, b) => b[sortBy]! - a[sortBy]!);\n    }\n    \n  }, [sortBy, sortOrder]);\n\n  const paginateData = useCallback((graphData: GraphData[]): GraphData[] => {\n    return graphData.slice(\n      (page - 1) * 30,\n      ((page - 1) * 30) + 30\n    );\n  }, [page]);\n\n  // Get the graph data from raw data\n  const [graphData, setGraphData] = useGetGraphDataFromRawData(playlistId);\n \n  // Sort and paginate data on radio change\n  useEffect(() => {\n    const sortedData = sortData(graphData);\n    setGraphData(sortedData);\n    setPaginatedData(paginateData(sortedData));\n  }, [sortBy, sortOrder, graphData, sortData, paginateData, setGraphData]);\n\n\n  return (\n    <div className=\"pageRootBar\">\n      <div className=\"graphContainerBar\">\n        <div className=\"barGraph\">\n          <BarChart barCategoryGap={'15%'} layout=\"vertical\" width={730} height={1100} data={paginatedData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis type=\"number\" />\n            {/* @ts-expect-error */}\n            <YAxis tick={<CustomizedAxisTick/>}type=\"category\" width={100} interval={0} dataKey=\"name\" />\n            <Tooltip />\n            <Legend />\n            {activeFeatures.danceability && <Bar dataKey=\"danceability\" fill=\"#8884d8\" />}\n            {activeFeatures.energy && <Bar dataKey=\"energy\" fill=\"#84d89d\" />}\n            {activeFeatures.valence && <Bar dataKey=\"valence\" fill=\"#bd84d8\" />}\n            {activeFeatures.tempo && <Bar dataKey=\"tempo\" fill=\"#d88492\" />}\n            {activeFeatures.loudness && <Bar dataKey=\"loudness\" fill=\"#d8d284\" />}\n          </BarChart>\n        </div>\n\n        <div className=\"paginateContainer\">\n          <Typography.Text style={{fontSize: '1rem', fontWeight: 'bold'}}>Pagination</Typography.Text>\n          <Pagination simple onChange={(page) => setPage(page)} current={page} pageSize={itemsPerPage} total={graphData.length} />\n        </div>\n      </div>\n      <div className=\"settingsContainerBar\">\n        <div className=\"checkboxContainer\">\n          <Typography.Text style={{fontSize: '1rem', fontWeight: 'bold'}}>Features</Typography.Text>\n          <div><Checkbox checked={activeFeatures.danceability} onChange={() => toggleFeature('danceability')}/><span className=\"graphCheckboxText\">Danceability</span></div>\n          <div><Checkbox checked={activeFeatures.energy} onChange={() => toggleFeature('energy')}/><span className=\"graphCheckboxText\">Energy</span></div>\n          <div><Checkbox checked={activeFeatures.valence} onChange={() => toggleFeature('valence')}/><span className=\"graphCheckboxText\">Valence</span></div>\n          <div><Checkbox checked={activeFeatures.tempo} onChange={() => toggleFeature('tempo')}/><span className=\"graphCheckboxText\">Tempo</span></div>\n          <div><Checkbox checked={activeFeatures.loudness} onChange={() => toggleFeature('loudness')}/><span className=\"graphCheckboxText\">Loudness</span></div>\n        </div>\n        <div className=\"sortContainer\">\n          <Typography.Text style={{fontSize: '1rem', fontWeight: 'bold'}}>Sort By</Typography.Text>\n          <Radio.Group value={sortBy} onChange={(e) => setSortBy(e.target.value)} style={{display: 'flex', flexDirection: 'column', alignItems: 'flex-start'}}>\n            <Radio value={RadioSortByOptions.none} ><span className=\"graphCheckboxText\">None</span></Radio>\n            <Radio value={RadioSortByOptions.danceability} disabled={!activeFeatures.danceability}><span className=\"graphCheckboxText\">Danceability</span></Radio>\n            <Radio value={RadioSortByOptions.energy} disabled={!activeFeatures.energy}><span className=\"graphCheckboxText\">Energy</span></Radio>\n            <Radio value={RadioSortByOptions.valence} disabled={!activeFeatures.valence}><span className=\"graphCheckboxText\">Valence</span></Radio>\n            <Radio value={RadioSortByOptions.tempo} disabled={!activeFeatures.tempo}><span className=\"graphCheckboxText\">Tempo</span></Radio>\n            <Radio value={RadioSortByOptions.loudness} disabled={!activeFeatures.loudness}><span className=\"graphCheckboxText\">Loudness</span></Radio>\n          </Radio.Group>\n        </div>\n\n        <div className=\"sortContainer\">\n          <Typography.Text style={{fontSize: '1rem', fontWeight: 'bold'}}>Sort Order</Typography.Text>\n          <Radio.Group value={sortOrder} onChange={(e)=> setSortOrder(e.target.value)} style={{display: 'flex', flexDirection: 'column', alignItems: 'flex-start'}}>\n            <Radio value={SortOrder.ascending} disabled={sortBy === RadioSortByOptions.none} ><span className=\"graphCheckboxText\">Ascending</span></Radio>\n            <Radio value={SortOrder.descending} disabled={sortBy === RadioSortByOptions.none} ><span className=\"graphCheckboxText\">Descending</span></Radio>\n          </Radio.Group>\n        </div>\n\n      </div>\n      \n    </div>\n  );\n\n function toggleFeature(feature: \"danceability\" | \"energy\" | \"valence\" | \"tempo\" | \"loudness\") {\n  setActiveFeatures({...activeFeatures, [feature]: !activeFeatures[feature]})\n }\n}\n\nexport default BarGraph;\n","import { CartesianGrid, Legend, Scatter, ScatterChart, Tooltip, XAxis, YAxis, ZAxis } from \"recharts\";\nimport React, { useState } from 'react';\nimport { getGraphDataFromId, useGetGraphDataFromRawData, useGetPlaylists } from \"../common/api\";\nimport {Dropdown, Typography, Menu, Button, AutoComplete, Input, Checkbox} from \"antd\";\nimport { GraphFeatures, Playlist, PlaylistGraphData } from '../constants/types';\nimport { DownOutlined, PlusOutlined} from \"@ant-design/icons\";\nimport './ScatterGraph.css';\nimport { find, startCase } from \"lodash\";\nimport { useCookies } from \"react-cookie\";\nimport decodeUriComponent from 'decode-uri-component';\nimport { AxisDomain } from 'recharts';\n\nconst hexFills = [\n  '#1791db',\n  '#84d89d',\n  '#bd84d8',\n  '#d88492',\n  '#d8d284'\n];\n\nconst featureDomains: {\n  [key: string]: [AxisDomain, AxisDomain]\n} = {\n  [GraphFeatures.danceability]: [0,1],\n  [GraphFeatures.energy]: [0,1],\n  [GraphFeatures.loudness]: [0, 1],\n  [GraphFeatures.valence]: [0, 1],  \n  [GraphFeatures.tempo]: [0, 250]\n}\n\n\nfunction ScatterGraph() {\n  const [cookies] = useCookies(['Authorization']);\n  const search = window.location.search;\n  const playlistId = search.match(/playlistId=(.*)/)![1];\n  const playlistName = search.match(/playlistName=(.*)&/)![1];\n  const [features, setFeatures] = useState({X: GraphFeatures.danceability, Y: GraphFeatures.energy, Z: GraphFeatures.loudness});\n  const [graphData] = useGetGraphDataFromRawData(playlistId);\n  const [playlists] = useGetPlaylists();\n  const [selectedPlaylists, setSelectedPlaylists] = useState<PlaylistGraphData[]>([]);\n\n  const getDropdownPlaylists = () => {\n    return playlists.map((res: Playlist)=> {return {'value': res.name}})\n  }\n\n  const handleMenuClick = (e: any, side:string) => {\n    setFeatures({...features, [side]: e.key})\n  }\n\n  const FeatureMenu = (side: string) => (\n    <Menu onClick={(e) => handleMenuClick(e, side)}>\n      <Menu.Item key={GraphFeatures.danceability}>\n        Danceability\n      </Menu.Item>\n      <Menu.Item key={GraphFeatures.energy}>\n        Energy\n      </Menu.Item>\n      <Menu.Item key={GraphFeatures.valence}>\n        Valence\n      </Menu.Item>\n      <Menu.Item key={GraphFeatures.tempo}>\n        Tempo\n      </Menu.Item>\n      <Menu.Item key={GraphFeatures.loudness}>\n        Loudness\n      </Menu.Item>\n    </Menu>\n  );\n\n  const searchBarSubmit = (evt: any) => {\n    evt.preventDefault();\n    const selectedPlaylistName = evt.target[0].value;\n    const playlist = find(playlists, (playlist: {name: string, id: string}) => {return playlist.name === selectedPlaylistName});\n    getGraphDataFromId(playlist!.id, cookies).then((res)=> {\n      setSelectedPlaylists([...selectedPlaylists, {playlist: playlist!, graphData: res, visible: true}]);\n    });\n  }\n\n  const removePlaylist = (playlistId: string) => {\n    for (let i = 0; i < selectedPlaylists.length; i++){\n      if (selectedPlaylists[i].playlist.id === playlistId) {\n        selectedPlaylists[i].visible = !selectedPlaylists[i].visible;\n      }\n    }\n    setSelectedPlaylists([...selectedPlaylists]);\n  } \n\n  return (\n    <div className=\"pageRoot\">\n      {/* Search bar that disappears after 5 items have been selected */}\n      {selectedPlaylists.length < 5 && <div className=\"settingsContainer\">\n        <div className=\"formContainer\">\n          Add more playlists to compare\n          <form className=\"searchForm\" onSubmit={searchBarSubmit}>\n\n            <Input.Group className=\"searchInput\">\n              <AutoComplete\n                placeholder=\"\"\n                options={getDropdownPlaylists()}\n              />\n            </Input.Group>\n\n            <Button htmlType=\"submit\"><PlusOutlined/></Button>\n\n          </form>\n        </div>\n      </div>}\n\n      {/* Graph */}\n      <div className=\"graphContainer\">\n        <div className=\"container\">\n          <div className=\"xAxisFeature\">{startCase(features.X)}</div>\n          <div className=\"graph\">\n            <ScatterChart width={730} height={730}\n              margin={{ top: 20, right: 0, bottom: 10, left: 0 }}>\n              <XAxis dataKey={features.X} type=\"number\" domain={featureDomains[features.X]}name=\"danceability\"/>\n              <YAxis dataKey={features.Y} type=\"number\" domain={featureDomains[features.Y]}name=\"energy\" />\n              <ZAxis dataKey={features.Z} type=\"number\" range={[0, 300]} name=\"valence\" />\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n              <Legend />\n              <CartesianGrid strokeDasharray=\"5 5\" />\n              <Scatter name={decodeUriComponent(playlistName)} data={graphData} fill=\"#8884d8\" />\n              {selectedPlaylists.map((playlistGraphData, index)=> (\n                (playlistGraphData.visible && \n                <Scatter \n                name={playlistGraphData.playlist.name} \n                data={playlistGraphData.graphData} \n                fill={hexFills[index]} />)\n              ))}\n            </ScatterChart>\n            <div>{startCase(features.Y)}</div>\n          </div>\n          <div className=\"selectedPlaylists\">\n              {selectedPlaylists.length > 0 && <span>Visible Playlists</span>}\n              {selectedPlaylists.map((playlist, index) => (\n                <div>\n                  <Checkbox \n                    checked={playlist.visible}\n                    onClick={()=> removePlaylist(playlist.playlist.id)}\n                    key={playlist.playlist.id}\n                    className=\"selectedPlaylistCheckbox\">\n                      {playlist.playlist.name}\n                  </Checkbox>\n                </div>\n                )\n              )}\n          </div>\n          </div>\n      </div>\n\n      {/* Holds the controller for the scatter chart */}\n      <div className=\"settingsContainer\">\n        <div className=\"dropdownLabelContainer\">\n          <Typography.Text>X-Axis Feature</Typography.Text>\n          <Dropdown overlay={FeatureMenu(\"X\")}>\n            <Button>\n              {startCase(features.X)} <DownOutlined />\n            </Button>\n          </Dropdown>\n        </div>\n        <div className=\"dropdownLabelContainer\">\n          <Typography.Text>Y-Axis Feature</Typography.Text>\n          <Dropdown overlay={FeatureMenu(\"Y\")}>\n            <Button>\n              {startCase(features.Y)} <DownOutlined />\n            </Button>\n          </Dropdown>\n        </div>\n        <div className=\"dropdownLabelContainer\">\n          <Typography.Text>Z-Axis Feature</Typography.Text>\n          <Dropdown overlay={FeatureMenu(\"Z\")}>\n            <Button>\n              {startCase(features.Z)} <DownOutlined />\n            </Button>\n          </Dropdown>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ScatterGraph;\n","import { Typography, Card } from 'antd';\nimport React from 'react';\nimport './InfoPage.css';\n\nfunction InfoPage() {\n  return (\n    <div className=\"infoPageRoot\">\n        <div className=\"cardContainer\">\n          <Card className=\"card\" title=\"What is this?\" bordered={true} style={{width: '100%'}}>\n            <Typography.Paragraph>\n              This tool allows a user to analyze their playlist objectively.\n              By analyzing different things such as the: valence, danceability, energy of a track\n              We are able to create the ultimate playlist.\n              Trying to create a study playlist? Well you probably don't want extremely high energy songs.\n              Trying to create a banger playlist for your next event? You probably want your songs to have a low danceability.\n              Use this tool to help you craft the ultimate playlist\n            </Typography.Paragraph>\n          </Card>\n          <Card className=\"card\" title=\"What are my analysis tools?\" bordered={true} style={{width: '100%'}}>\n            <Typography.Paragraph>\n              As of now we offer two tools. You can sort and organize your data into a bar graph,\n              where you can find the outliers and address them appropriately. However, this playlist data on its own \n              is not extremely useful. We make is more useful by offering another scatter chart tool.\n              Here you can add up to 5 playlists, and see how all of them stack up against one another. \n              Then you can compare with your favourite playlists and see how your playlist stacks up against them.\n            </Typography.Paragraph>\n          </Card>\n          <Card className=\"card subCardContainer\" title=\"What do all these features mean?\" bordered={true} style={{width: '100%'}}>\n            <Card className=\"subCard\" title=\"Danceability\" bordered={true} style={{width: '100%'}}>\n              <Typography.Paragraph>\n              Danceability describes how suitable a track is for dancing based on a combination of \n              musical elements including tempo, rhythm stability, beat strength, and overall regularity. \n              A value of 0.0 is least danceable and 1.0 is most danceable.\n              </Typography.Paragraph>\n            </Card>\n            <Card className=\"subCard\" title=\"Energy\" bordered={true} style={{width: '100%'}}>\n              <Typography.Paragraph>\n              Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. \n              Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, \n              while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute \n              include dynamic range, perceived loudness, timbre, onset rate, and general entropy. \n              </Typography.Paragraph>\n            </Card>\n            <Card className=\"subCard\" title=\"Valence\" bordered={true} style={{width: '100%'}}>\n              <Typography.Paragraph>\n              A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. \n              Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), \n              while tracks with low valence sound more negative (e.g. sad, depressed, angry).\n              </Typography.Paragraph>\n            </Card>\n            <Card className=\"subCard\" title=\"Tempo\" bordered={true} style={{width: '100%'}}>\n              <Typography.Paragraph>\n              The overall estimated tempo of a track in beats per minute (BPM). In musical terminology, \n              tempo is the speed or pace of a given piece and derives directly from the average beat duration. \n              </Typography.Paragraph>\n            </Card>\n          </Card>\n        </div>\n    </div>\n  )\n\n}\n\nexport default InfoPage;\n","import { Typography } from 'antd';\nimport { find, get, round, truncate } from 'lodash';\nimport prettyMilliseconds from 'pretty-ms';\nimport React from 'react';\nimport { RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar } from 'recharts';\nimport { useGetPlaylistById, useGetPlaylistCoverImage, useGetRadarChartDataFromId } from '../common/api';\nimport './Report.css';\nimport { TrackObject } from '../constants/types';\nimport decodeUriComponent from 'decode-uri-component';\n\nfunction Report() {\n  const search = window.location.search;\n  const playlistId = search.match(/playlistId=(.*)/)![1];\n  const playlistName = search.match(/playlistName=(.*)&/)![1];\n  const [playlistCoverImage] = useGetPlaylistCoverImage(playlistId);\n  const [playlist] = useGetPlaylistById(playlistId);\n  const [data] = useGetRadarChartDataFromId(playlistId, playlistName);\n  \n  function getTotalTrackDuration() {\n    if (playlist.tracks.items.length === 0) return 0;\n    const sum = playlist.tracks.items.reduce((sum, curr)=> {\n      return sum += get(curr, 'track.duration_ms')\n    }, 0);\n    return sum;\n  }\n\n  function getAverageTrackDuration() {\n    if (playlist.tracks.items.length === 0) return 0;\n    const sum = playlist.tracks.items.reduce((sum, curr)=> {\n      return sum += get(curr, 'track.duration_ms')\n    }, 0);\n    return sum/playlist.tracks.items.length;\n  }\n\n\n  function getAverage(key: string) {\n    const avg = find(data, (dataObj)=> dataObj.name === key)![playlistName] as number;\n    return `${round(avg * 100, 0)}%`;\n  }\n  \n  return (\n    <div className=\"reportRoot\">\n\n      <div className=\"header\">\n        <div className=\"headerTitleContainer\">\n          <img className=\"playlistCoverImage\" alt=\"playlist cover\" src={playlistCoverImage}></img>\n          <div className=\"headerTextContainer\">\n            <Typography.Text className=\"headerTitle\">{`Report for ${decodeUriComponent(playlistName)}`}</Typography.Text>\n            <Typography.Text className=\"headerSubtitle\">{playlist.description}</Typography.Text>\n            <Typography.Text >By: {playlist.owner.display_name}</Typography.Text>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"infoContainer\">\n        <Typography.Text>Tracks: {get(playlist, 'tracks.items', []).length} </Typography.Text>\n        <Typography.Text>Total Duration: {prettyMilliseconds(getTotalTrackDuration())} </Typography.Text>\n        <Typography.Text>Average Duration: {prettyMilliseconds(getAverageTrackDuration())} </Typography.Text>\n        <Typography.Text>Followers: {playlist.followers.total} </Typography.Text>\n      </div>\n      \n      <Typography.Title className=\"radarTitle\" level={5}>Radar Chart for {decodeUriComponent(playlistName)}</Typography.Title>\n      <div className=\"radarChart\">\n        <RadarChart cy={'60%'} outerRadius={100} width={730} height={250} margin={{top: 20}} data={data}>\n          <PolarGrid/>\n          <PolarAngleAxis dataKey=\"name\" stroke=\"white\" />\n          <PolarRadiusAxis angle={90} domain={[0, 1]} />\n          <Radar name={playlistName} dataKey={playlistName} stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.8} />\n        </RadarChart>\n      </div>\n      <div className=\"radarInfo\">\n        <Typography.Text>Average Valence: {getAverage('valence')}</Typography.Text>\n        <Typography.Text>Average Danceability: {getAverage('danceability')}</Typography.Text>\n        <Typography.Text>Average Energy: {getAverage('energy')}</Typography.Text>\n      </div>\n      \n      <Typography.Title className=\"radarTitle\" level={5}>Tracklist</Typography.Title>\n      <div className=\"trackList\">\n        {playlist.tracks.items.map((track: TrackObject, index: number) => (\n          <Typography.Text style={{marginRight: 20}}>{index+1}. {truncate(track.track.name, {length: 20})}</Typography.Text>\n        ))}\n      </div>\n\n    </div>\n  )\n}\n\nexport default Report;\n","import React, {useEffect, useState} from 'react';\nimport './Playlist.css';\nimport SideBar from '../components/Sidebar';\nimport {ContentTypes} from '../constants/types';\nimport { lastIndexOf, startCase } from 'lodash';\nimport {useLocation} from 'react-router-dom';\nimport {PageHeader} from 'antd';\nimport BarGraph from './BarGraph';\nimport ScatterGraph from './ScatterGraph';\nimport InfoPage from './InfoPage';\nimport Report from './Report';\nimport decodeUriComponent from 'decode-uri-component';\n\nfunction Playlist() {\n  const [contentType, setContentType] = useState(ContentTypes.None);\n  const search = window.location.search;\n  const playlistName = decodeUriComponent(search.match(/playlistName=(.*)&/)![1]);\n  const pathName = useLocation().pathname;\n\n  useEffect(()=> {\n    setContentType(pathName.substring(lastIndexOf(pathName, '/') + 1) as ContentTypes);\n  }, [pathName]);\n\n  function getContent() {\n    if (contentType === ContentTypes.BarGraph) {\n      return <BarGraph/>\n    } else if (contentType === ContentTypes.Info) {\n      return <InfoPage/>\n    } else if (contentType === ContentTypes.None) {\n\n    } else if (contentType === ContentTypes.Report) {\n      return <Report/>\n    } else if (contentType === ContentTypes.ScatterGraph) {\n      return <ScatterGraph/>\n    }\n  }\n\n  \n  return (\n    <div className=\"playlistRoot\">\n      <SideBar contentType={contentType} setContentType={setContentType}></SideBar>\n      <div className=\"contentDiv\">\n        <PageHeader className=\"pageHeader\" title={`${startCase(contentType)} Graph`} subTitle={`Analysis for ${playlistName}`}></PageHeader>\n        {getContent()}\n      </div>\n    </div>\n  )\n}\n\nexport default Playlist;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport PrivateRoute from './components/PrivateRoute';\nimport Login from './pages/Login';\nimport { useCreateAuthContext } from './context/auth';\nimport {CookiesProvider} from 'react-cookie';\nimport Search from './pages/Search';\nimport Playlist from './pages/Playlist';\n\nfunction App() {\n  const [AuthContext, AuthContextDefault] = useCreateAuthContext();\n\n  return (\n    <div className=\"App\">\n      <CookiesProvider>\n        <AuthContext.Provider value={AuthContextDefault}>\n          <Router>\n            <Switch>\n              <PrivateRoute path=\"/app/playlist/\">\n                <Playlist/>\n              </PrivateRoute>\n              <PrivateRoute path=\"/app/search\" >\n                <Search/>\n              </PrivateRoute>\n              <Route path=\"/login\" >\n                <Login/>\n              </Route>\n              <Route path=\"/\" component={Home}/>\n            </Switch>\n          </Router>\n        </AuthContext.Provider>\n      </CookiesProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}